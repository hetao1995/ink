<?xml version="1.0" encoding="UTF-8"?>
<!-- 该xml配置中,xml元素大小写不敏感 -->
<!-- status="off",log4j2把自身事件记录到控制台的配置，off表示不记录，其余的记录有trace，debug，info，warn，error，fatal -->
<!-- monitorInterval表示检测更改配置的时间,单位是秒,最小间隔为5秒,0或负数表示不检测 -->
<configuration name="test-cfg" status="off" monitorInterval="0">

    <!-- 常量引用 -->
    <properties>
        <!--<property name="LOG_HOME">/opt/logs/api-logs/</property>-->
        <property name="LOG_HOME">./logs</property>
        <property name="FORMAT">%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n</property>
    </properties>

    <!-- appender用于接收各种日志 -->
    <Appenders>
        <!-- 常见的输出到console,常用于开发环境中,默认是system_err,还有一个system_out -->
        <Console name="console" target="system_out">
            <!-- appender级别的日志过滤 -->
            <!-- <thresholdFilter level="info" onMatch="accept" onMismatch="deny"/> -->
            <PatternLayout pattern="${FORMAT}"/>
        </Console>
        <!-- 常用于开发环境,把日志记录到文件中,默认追加 -->
        <RollingFile name="db_log" fileName="${LOG_HOME}/ink-db.log" filePattern="${LOG_HOME}/ink-db-%d{yyyy-MM-dd HH}.log">
            <patternLayout pattern="${FORMAT}"/>
            <Policies>
                <TimeBasedTriggeringPlicy interval="1"/>
                <SizeBasedTriggeringPolicy size="250MB"/>
                <DefaultRolloverStrategy max="7"/>
            </Policies>
        </RollingFile>
        <RollingFile name="service_log" fileName="${LOG_HOME}/ink-service.log" filePattern="${LOG_HOME}/ink-service-%d{yyy-MM-dd HH}.log">
            <patternLayout pattern="${FORMAT}"/>
            <Policies>
                <TimeBasedTriggeringPlicy interval="1"/>
                <SizeBasedTriggeringPolicy size="250MB"/>
            </Policies>
        </RollingFile>
    </Appenders>

    <!-- 接收appender -->
    <loggers>
        <logger name="org.apache.http" level="warn"/>
        <!-- Spring -->
        <logger name="org.springframework" level="INFO"/>
        <!-- mybatis loggers -->
        <logger name="com.mybatis" level="DEBUG"/>
        <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG"/>
        <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG"/>
        <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG"/>
        <!-- sql loggers -->
        <logger name="java.sql.Connection" level="DEBUG" additivity="true"/>
        <logger name="java.sql.Statement" level="DEBUG" additivity="true"/>
        <logger name="java.sql.PreparedStatement" level="=debug,stdout" additivity="true"/>
        <logger name="java.sql.ResultSet" level="DEBUG" additivity="true"/>
        <logger name="org.apache" level="WARN"/>

        <!-- 对包进行更详细的配置 -->
        <!-- additivity表示是否追加,防止重复,因为root已经接收过一次了 -->
        <logger name="xyz.itao.ink.dao" level="DEBUG" additivity="true">
            <appender-ref ref="db_log"/>
        </logger>
        <logger name="xyz.itao.ink.controller" level="DEBUG" additivity="true">
            <appender-ref ref="service_log"/>
        </logger>
        <logger name="xyz.itao.ink.service" level="DEBUG" additivity="true">
            <AppenderRef ref="service_log"/>
        </logger>
        <!-- All < Trace < Debug < Info < Warn < Error < Fatal < OFF. -->
        <!-- 程序会打印高于或等于所设置级别的日志，设置的日志等级越高，打印出来的日志就越少。-->
        <!-- 此level设置的日志级别，是过滤项目中输出的日志信息，和ThresholdFilter的level有所区别 -->
        <root level="DEBUG">
            <AppenderRef ref="console"/>
        </root>
    </loggers>

</configuration>